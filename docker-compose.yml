services:
  db:
    image: postgres:latest
    container_name: ecommerce_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - backend

  create-topics:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka_create_topics
    entrypoint: >
      sh -c "
      echo 'Creating topics...' &&
      sleep 30 &&
      kafka-topics --create --topic notification-events --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 &&
      kafka-topics --create --topic audit-logs-events --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1
      "
    depends_on:
      - kafka
    networks:
      - backend

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    environment:
      KAFKA_CLUSTERS_0_NAME: "Local Kafka"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
    ports:
      - "9000:8080"
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend

volumes:
  db_data:

networks:
  backend:
    driver: bridge
